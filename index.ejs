<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>NESSUMSAR RETAIL STORE SYSTEM PROJECT</title>
    <link rel="stylesheet" type="text/css" href="public/css/store-system-main.css">
</head>
<body>
    <main id="container">
        <section id="store-system-main-area">
            <h1>RETAIL STORE SYSTEM PROJECT</h1>
            <h5>by nessumsar</h5>
    
            <p>This project uses NodeJS, Express, and MongoDB, and emulates a retail shop's front and back end architecture. It allows staff to manage the store e-commerce page, pick orders placed by customers through the website, create store signage, and use the store's point-of-sale system, as well as maintain information on each of the store's available items.</p>
    
            <ul>The following are the available components of the project:
                <li><a href="/store-system/webstore">Store E-Commerce Site</a></li>
                <li><a href="/store-system/webstore-orders">Order Pick List from Store E-Commerce Site</a></li>
                <li><a href="/store-system/point-of-sale">Store Point-Of-Sale System</a></li>
                <li><a href="/store-system/create-full-page-signs">Store Sign-Making Kit (Full Page Signs)</a></li>
                <!--<li><a href="/store-system/frontend-produce-plu">Easy-to-print cashier produce code reference page</a></li>-->
                <li><a href="/store-system/public-plu-data">Publicly available Produce PLU data API for use by individuals in their own projects</a></li>
            </ul>
    
            <ul>Significant parts of this project include:
                <li>Creating a detailed and easy-to-use product database and schema for all the characteristics of each item</li>
                <li>Creating a point-of-sale setup which automatically reads if an item has promotional pricing, adding applicable taxes, asking for an item weight if the item is sold by weight, and allowing the system to void any item a customer no longer wants while also showing totals with any applicable taxes.</li>
                <li>Creating an e-commerce web page that lists the store's available items automatically using the database information, and allows customers to send an order to be picked in store.</li>
                <li>Creating a way for e-commerce orders to show up on staff devices, allowing them to pick the first available open order for customer pickup.</li>
                <li>Creating a way to easily make in-store signage which automatically uses promo pricing if an item is on sale and converts kilogram prices to pound prices, and prompts for Country of Origin information if a produce sign is being made.</li>
            </ul>
        </section>
    </main>
</body>
</html>





